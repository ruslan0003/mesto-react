{"version":3,"sources":["images/close-icon.svg","images/pencil-icon.svg","images/plus-icon.svg","images/delete-icon.svg","images/logo.svg","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Header.js","components/PopupWithForm.js","components/PopupWithImage.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddCardPopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","UserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeIconClassName","key","onClick","onCardDelete","src","deleteIcon","alt","link","name","onCardClick","onCardLike","length","Main","avatar","onEditAvatar","pencilIcon","onEditProfile","about","onAddPlace","plusIcon","cards","map","onCard","Header","logo","PopupWithForm","isOpen","onClose","closeIcon","title","noValidate","onSubmit","children","PopupWithImage","Api","baseUrl","headers","this","_baseUrl","_headers","fetch","then","res","ok","json","Promise","reject","status","cardTitle","cardUrl","method","body","JSON","stringify","cardId","job","cardsApi","userDataApi","EditProfilePopup","useState","setName","setDescription","useEffect","e","preventDefault","onUpdateUser","id","type","value","placeholder","minLength","maxLength","onChange","evt","target","required","avatarRef","useRef","onUpdateAvatar","current","ref","AddCardPopup","setTitle","setLink","onAddPlaceSubmit","document","style","backgroundColor","App","setCurrentUserInfo","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","getData","catch","err","console","log","setCards","closeAllPopups","initialCards","item","Provider","changeLikeCardStatus","newCard","newCards","c","deleteCard","cardsWithoutDeleted","filter","editProfile","url","createCard","EditAvatarPopup","changeAvatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.bd05f181.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close-icon.5df32a06.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil-icon.6bfdb354.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus-icon.b2fce4ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-icon.d8078343.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; Руслан&nbsp;Лукичев</p>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\n\nexport const UserContext = React.createContext();\n","import React from 'react';\nimport deleteIcon from '../images/delete-icon.svg';\nimport { UserContext } from '../contexts/CurrentUserContext.js';\n\nfunction Card(props) {\n\n  function handleClick() {\n    props.onCardClick(props.card);\n\t}\n\n\tfunction handleLikeClick() {\n\t\tprops.onCardLike(props.card);\n\t}\n\t\n\tfunction handleDeleteClick() {\n\t\tprops.onCardDelete(props.card);\n\t}\n\n\tconst currentUser = React.useContext(UserContext);\n\tconst isOwn = props.card.owner._id === currentUser._id;\n\tconst cardDeleteButtonClassName = (\n  `element__delete-button ${isOwn ? 'element__delete-button_visible' : 'element__delete-button_hidden'}`\n\t);\n\n\t// Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\tconst isLiked = props.card.likes.some(i => i._id === currentUser._id);\n\n\tconst cardLikeIconClassName = (\n\t\t`${isLiked? 'element__like-icon element__like-icon_active' : 'element__like-icon'}`\n\t);\n\n  return (\n    <div className=\"element-template\" key={props.card._id}>\n      <li className=\"element\">\n        <button className={cardDeleteButtonClassName} onClick={handleDeleteClick}>\n          <img className=\"element__delete-icon\" src={deleteIcon} alt=\"Иконка кнопки удалить\" />\n        </button>\n\t\t\t\t<>\n        <img className=\"element__photo\" src={props.card.link} alt={props.card.name} onClick={handleClick}/>\n\t\t\t\t</>\n        <div className=\"element__title-background\">\n          <h3 className=\"element__title\">{props.card.name}</h3>\n          <div className=\"element__like-wrapper\">\n            <button className=\"element__like-button\" onClick={handleLikeClick}>\n              <div className={cardLikeIconClassName}></div>\n            </button>\n            <p className=\"element__like-number\">{props.card.likes.length}</p>\n          </div>\n        </div>\n      </li>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport pencilIcon from '../images/pencil-icon.svg';\nimport plusIcon from '../images/plus-icon.svg';\nimport Card from './Card.js';\nimport { UserContext } from '../contexts/CurrentUserContext.js';\n\nfunction Main(props) {\n\n\tconst currentUser = React.useContext(UserContext);\n\n\treturn (\n\t\t<main>\n\t\t\t<section className=\"profile\">\n\t\t\t\t<div className=\"profile__card\">\n\t\t\t\t\t<div className=\"profile__avatar-wrap\">\n\t\t\t\t\t\t<img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Аватар пользователя\" />\n\t\t\t\t\t\t<button className=\"profile__change-avatar-button\" onClick={props.onEditAvatar}>\n\t\t\t\t\t\t\t<img className=\"profile__change-avatar-icon\" src={pencilIcon} alt=\"Иконка кнопки смены аватара\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"profile__name-button-container\">\n\t\t\t\t\t\t\t<h1 className=\"profile__name\">{currentUser.name}</h1>\n\t\t\t\t\t\t\t<button className=\"profile__edit-button\" onClick={props.onEditProfile}>\n\t\t\t\t\t\t\t\t<img className=\"profile__edit-button-icon\" src={pencilIcon}\n\t\t\t\t\t\t\t\t\talt=\"Иконка кнопки редактирования профиля\" />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p className=\"profile__position\">{currentUser.about}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<button className=\"profile__add-button\" onClick={props.onAddPlace}>\n\t\t\t\t\t<img className=\"profile__add-button-icon\" src={plusIcon} alt=\"Иконка кнопки добавить\" />\n\t\t\t\t</button>\n\t\t\t</section>\n\t\t\t<ul className=\"elements\">\n\t\t\t\t{props.cards.map((card) => <Card key={card._id} card={card} onCardClick={props.onCard} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} />)}\n\t\t\t</ul>\n\t\t</main>\n\t);\n}\n\nexport default Main;\n","import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={logo} alt=\"Логотип Mesto Russia\" />\n    </header>\n  );\n}\n\nexport default Header;\n\n","import React from 'react';\nimport closeIcon from '../images/close-icon.svg';\n\nfunction PopupWithForm(props) {\n\n  return (\n    <section className={props.isOpen ? `popup ${props.name} popup_opened` : `popup ${props.name}`}>\n      <div className={`${props.name}__container`}>\n        <button className={`${props.name}__close-button close-button`} onClick={props.onClose}>\n          <img className={`${props.name}__close-icon close-icon`} src={closeIcon} alt=\"Иконка закрытия модального окна\" />\n        </button>\n        <h3 className={`${props.name}__title`}>{props.title}</h3>\n        <form className={`${props.name}__form form`} name={props.name} noValidate onSubmit={props.onSubmit}>\n          {props.children}\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\nimport closeIcon from '../images/close-icon.svg';\n\nfunction PopupWithImage(props) {\n  if (props.card) {\n    return (\n      <section className=\"popup popup-image popup_opened\">\n        <figure className=\"popup-image__container\">\n          <img className=\"popup-image__photo\" src={props.card.link} alt={props.card.name} />\n          <button className=\"popup-image__close-button\" onClick={props.onClose}>\n            <img className=\"popup-image__close-icon close-icon\" src={closeIcon} alt=\"Иконка закрытия модального окна\" />\n          </button>\n          <figcaption className=\"popup-image__title\">{props.card.name}</figcaption>\n        </figure>\n      </section>\n    );\n  }\n  else return null;\n}\n\nexport default PopupWithImage;\n","class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  getData() {\n    return fetch(this._baseUrl, { headers: this._headers })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n  createCard(cardTitle, cardUrl) {\n    return fetch(this._baseUrl,\n      {\n        headers: this._headers,\n        method: 'POST',\n        body: JSON.stringify({\n          name: cardTitle,\n          link: cardUrl\n        })\n      })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n\t}\n\t\n\tchangeLikeCardStatus(cardId, isLiked) {\n\t\treturn fetch(`${this._baseUrl}/likes/${cardId}`,\n      {\n        headers: this._headers,\n        method: `${isLiked? 'PUT' : 'DELETE'}`,\n      })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n\t}\n\n  editProfile(name, job) {\n    return fetch(this._baseUrl,\n      {\n        headers: this._headers,\n        method: 'PATCH',\n        body: JSON.stringify({\n          name: name,\n          about: job\n        })\n      })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/${cardId}`,\n      {\n        headers: this._headers,\n        method: 'DELETE',\n      })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n  changeAvatar(link) {\n    return fetch(`${this._baseUrl}/avatar`,\n      {\n        headers: this._headers,\n        method: 'PATCH',\n        body: JSON.stringify({\n          avatar: link,\n        })\n      })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n}\n\nexport const cardsApi = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14/cards',\n  headers: {\n    'authorization': '82766c49-7200-46d6-b92c-89ba083f974b',\n    'Content-Type': 'application/json'\n  }\n})\n\nexport const userDataApi = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14/users/me',\n  headers: {\n    'authorization': '82766c49-7200-46d6-b92c-89ba083f974b',\n    'Content-Type': 'application/json'\n  }\n})\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { UserContext } from '../contexts/CurrentUserContext.js';\n\nfunction EditProfilePopup(props) {\n\n\tconst [name, setName] = React.useState('');\n\tconst [job, setDescription] = React.useState('');\n\tconst currentUser = React.useContext(UserContext);\n\n\t// После загрузки текущего пользователя из API\n\t// его данные будут использованы в управляемых компонентах.\n\tReact.useEffect(() => {\n\t\tsetName(currentUser.name);\n\t\tsetDescription(currentUser.about);\n\t}, [currentUser]);\n\n\t//Обработчик изменения инпута обновляет стейт\n\tfunction handleChangeName(evt) {\n\t\tsetName(evt.target.value);\n\t}\n\n\tfunction handleChangeDescription(evt) {\n\t\tsetDescription(evt.target.value);\n\t}\n\n\tfunction handleSubmit(e) {\n\t\t// Запрещаем браузеру переходить по адресу формы\n\t\te.preventDefault();\n\t\n\t\t// Передаём значения управляемых компонентов во внешний обработчик\n\t\tprops.onUpdateUser(name, job);\n\t}\n\n\treturn (\n\t\t<PopupWithForm name=\"popup-edit\" title=\"Редактировать профиль\" onClose={props.onClose} isOpen={props.isOpen} onSubmit={handleSubmit}>\n\t\t\t<input className=\"form__input form__input_type_name\" id=\"name-input\" type=\"text\" value={name || ''} name=\"name-input\" placeholder=\"Имя\"\n\t\t\t\tminLength=\"2\" maxLength=\"40\" onChange={handleChangeName} required />\n\t\t\t<span className=\"form__input-error\" id=\"name-input-error\"></span>\n\t\t\t<input className=\"form__input form__input_type_job\" type=\"text\" value={job || ''} name=\"job-input\" id=\"job-input\" placeholder=\"О себе\"\n\t\t\t\tminLength=\"2\" maxLength=\"200\" onChange={handleChangeDescription} required />\n\t\t\t<span className=\"form__input-error\" id=\"job-input-error\"></span>\n\t\t\t<button className=\"form__submit popup-edit__submit-button\" type=\"submit\" value=\"Сохранить\">Сохранить</button>\n\t\t</PopupWithForm>\n\t);\n}\n\nexport default EditProfilePopup;\n","\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nfunction EditProfilePopup(props) {\n\n\tconst avatarRef = React.useRef(); // записываем объект, возвращаемый хуком, в переменную\n\n\tfunction handleSubmit(evt) {\n\t\tevt.preventDefault();\n\t\tprops.onUpdateAvatar(avatarRef.current.value);\n\t  }\n\n\treturn (\n\t\t<PopupWithForm name=\"popup-avatar\" title=\"Обновить аватар\" onClose={props.onClose} isOpen={props.isOpen} onSubmit={handleSubmit}>\n\t\t<input className=\"form__input form__input_type_avatar_url\" id=\"avatar-url\" name=\"avatar-url\" placeholder=\"Ссылка на аватар\"\n\t\t\ttype=\"url\" required ref={avatarRef}/>\n\t\t<span className=\"form__input-error\" id=\"avatar-url-error\"></span>\n\t\t<button className=\"form__submit popup-avatar__submit-button\" type=\"submit\" value=\"Создать\">Сохранить</button>\n\t</PopupWithForm>\n\t);\n}\n\nexport default EditProfilePopup;\n","\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nfunction AddCardPopup(props) {\n\n\tconst [title, setTitle] = React.useState('');\n\tconst [link, setLink] = React.useState('');\n\n\t//Обработчик изменения инпута обновляет стейт\n\tfunction handleChangeTitle(evt) {\n\t\tsetTitle(evt.target.value);\n\t}\n\n\tfunction handleChangeLink(evt) {\n\t\tsetLink(evt.target.value);\n\t}\n\n\tfunction handleSubmit(evt) {\n\t\t// Запрещаем браузеру переходить по адресу формы\n\t\tevt.preventDefault();\n\n\t\t// Передаём значения управляемых компонентов во внешний обработчик\n\t\tprops.onAddPlaceSubmit(title, link);\n\t}\n\n\treturn (\n\n\t\t<PopupWithForm name=\"popup-add\" title=\"Новое место\" onClose={props.onClose} isOpen={props.isOpen} onSubmit={handleSubmit}>\n\t\t\t<input className=\"form__input form__input_type_title\" type=\"text\" id=\"title-input\" name=\"title-input\" placeholder=\"Название\" minLength=\"1\" maxLength=\"30\" required onChange={handleChangeTitle} />\n\t\t\t<span className=\"form__input-error\" id=\"title-input-error\"></span>\n\t\t\t<input className=\"form__input form__input_type_url\" id=\"url-input\" name=\"url-input\" placeholder=\"Ссылка на картинку\"\n\t\t\t\ttype=\"url\" required onChange={handleChangeLink} />\n\t\t\t<span className=\"form__input-error\" id=\"url-input-error\"></span>\n\t\t\t<button className=\"form__submit popup-add__submit-button\" type=\"submit\" value=\"Создать\">Создать</button>\n\t\t</PopupWithForm>\n\n\t)\n}\n\n\nexport default AddCardPopup;\n","import React from 'react';\nimport Footer from './Footer.js';\nimport Main from './Main.js';\nimport Header from './Header.js';\nimport '../index.css';\nimport PopupWithForm from './PopupWithForm.js';\nimport PopupWithImage from './PopupWithImage.js';\nimport { userDataApi } from '../utils/api.js';\nimport { UserContext } from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport { cardsApi } from '../utils/api.js';\nimport AddCardPopup from './AddCardPopup.js';\n\ndocument.body.style.backgroundColor = 'black';\n\nfunction App() {\n\tconst [currentUser, setCurrentUserInfo] = React.useState({});\n\tconst [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n\tconst [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n\tconst [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\tconst [selectedCard, setSelectedCard] = React.useState(null);\n\n\tReact.useEffect(() => {\n\t\tuserDataApi.getData().then(\n\t\t\tres => {\n\t\t\t\tsetCurrentUserInfo(res);\n\t\t\t}).catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}, []);\n\n\tconst [cards, setCards] = React.useState([]);\n\n\tReact.useEffect(() => {\n\t\tcardsApi.getData().then(\n\t\t\t(res) => {\n\t\t\t\tconst initialCards = res.map(item => ({\n\t\t\t\t\tname: item.name,\n\t\t\t\t\tlink: item.link,\n\t\t\t\t\tlikes: item.likes,\n\t\t\t\t\t_id: item._id,\n\t\t\t\t\towner: {\n\t\t\t\t\t\t_id: item.owner._id,\n\t\t\t\t\t}\n\t\t\t\t}))\n\t\t\t\tsetCards(initialCards)\n\t\t\t}).catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}, []);\n\n\tfunction handleCardLike(card) {\n\t\t// Снова проверяем, есть ли уже лайк на этой карточке\n\t\tconst isLiked = card.likes.some(i => i._id === currentUser._id);\n\t\t// Отправляем запрос в API и получаем обновлённые данные карточки\n\t\tcardsApi.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n\t\t\t// Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n\t\t\tconst newCards = cards.map((c) => c._id === card._id ? newCard : c);\n\t\t  // Обновляем стейт\n\t\t\tsetCards(newCards);\n\t\t});\n\t}\n\n\tfunction handleCardDelete(card) {\n\t\tcardsApi.deleteCard(card._id).then(() => {\n\t\t\tconst cardsWithoutDeleted = cards.filter(c => c._id !== card._id);\n\t\t\tsetCards(cardsWithoutDeleted);\n\t\t})\n\t}\n\n\tfunction handleEditAvatarClick() {\n\t\tsetIsEditAvatarPopupOpen(true);\n\t}\n\n\tfunction handleEditProfileClick() {\n\t\tsetIsEditProfilePopupOpen(true);\n\t}\n\n\tfunction handleAddPlaceClick() {\n\t\tsetIsAddPlacePopupOpen(true);\n\t}\n\n\tfunction closeAllPopups() {\n\t\tsetIsEditProfilePopupOpen(false);\n\t\tsetIsEditAvatarPopupOpen(false);\n\t\tsetIsAddPlacePopupOpen(false);\n\t\tsetSelectedCard(null);\n\t}\n\n\tfunction handleUpdateUser(name, about) {\n\t\tuserDataApi.editProfile(name, about).then(\n\t\t\tres => {\n\t\t\t\tsetCurrentUserInfo(res);\n\t\t\t\tcloseAllPopups();\n\t\t\t}).catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\tfunction handleUpdateAvatar(link) {\n\t\tuserDataApi.changeAvatar(link).then(\n\t\t\tres => {\n\t\t\t\tsetCurrentUserInfo(res);\n\t\t\t\tcloseAllPopups();\n\t\t\t}).catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\tfunction handleAddPlaceSubmit(title, url) {\n\t\tcardsApi.createCard(title, url).then(\n\t\t\tnewCard => {\n\t\t\t\tsetCards([...cards, newCard]);\n\t\t\t\tcloseAllPopups();\n\t\t\t}).catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\n\treturn (\n\t\t<div className=\"page\">\n\n\t\t\t<UserContext.Provider value={currentUser}>\n\n\t\t\t\t<Header />\n\n\t\t\t\t<Main onEditProfile={handleEditProfileClick} onEditAvatar={handleEditAvatarClick} onAddPlace={handleAddPlaceClick} onCard={setSelectedCard} onCardLike={handleCardLike} onCardDelete={handleCardDelete} cards={cards}/>\n\n\t\t\t\t<Footer />\n\n\t\t\t\t<EditProfilePopup onClose={closeAllPopups} isOpen={isEditProfilePopupOpen} onUpdateUser={handleUpdateUser}/> \n\n\t\t\t\t<AddCardPopup onClose={closeAllPopups} isOpen={isAddPlacePopupOpen} onAddPlaceSubmit={handleAddPlaceSubmit} />\n\n\t\t\t\t<PopupWithForm name=\"popup-submit\" title=\"Вы уверены?\">\n\t\t\t\t\t<button className=\"form__submit popup-submit__submit-button form__submit-button_no-input\" type=\"submit\" value=\"Подтвердить\">Да</button>\n\t\t\t\t</PopupWithForm>\n\n\t\t\t\t<EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/>\n\n\t\t\t\t<PopupWithImage card={selectedCard} onClose={closeAllPopups} />\n\n\t\t\t</UserContext.Provider>\n\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}